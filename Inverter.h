//---------------------------------------------------------------------------

#ifndef InverterH
#define InverterH
#include "MitCome/uCInv.h"
#include "Protocol.h"
#include "vcl.h"

//------------------------------------------------------------------------------
//class rotationThread;
class Inverter
{
	public:
		Inverter();
		~Inverter();
		//! @brief Устанавливает скорость в один из параметров
		//! @param number - номер пункта в частотнике ( 4,5,6 )
		//! @param value  - значение в Гц
		bool setParameterSpeed(int number, int value);
		//! @param number номер пункта пч (4,5,6)
		int getParameterSpeed(int number);
		//! Включает вращение
		bool startRotation();
		//! Останавливает вращение
		bool stopRotation();
		//! Считывает все значения, нужно для проверки в отдельном потоке
		bool stateRead();
		bool ResetErrors();
		bool NETManage();
	private:
	  //	CInv* inverter;
	 //	TCriticalSection* cs;
		//! Поток который будет запрашивать состояние частоника каждые 500мс
	//	rotationThread *testThread;
		void OnProtocol(AnsiString _msg);
};
//------------------------------------------------------------------------------
/*
class rotationThread: public TThread
{
	private:
		void __fastcall Execute();
		CInv* inv;
		TCriticalSection* cs;
	public:
		__fastcall rotationThread(CInv* _inv,TCriticalSection* _cs);
};
*/
extern Inverter *frConverter;
//------------------------------------------------------------------------------

#endif


